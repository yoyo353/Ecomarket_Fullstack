package com.ecomarket.userservice.config;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.servers.Server;
import io.swagger.v3.oas.models.tags.Tag;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

@Configuration
public class SwaggerConfig {

    @Value("${server.port:8091}")
    private String serverPort;

    @Bean
    public OpenAPI customOpenAPI() {
        return new OpenAPI()
                .info(apiInfo())
                .servers(List.of(
                    new Server()
                        .url("http://localhost:" + serverPort)
                        .description("Servidor de Desarrollo"),
                    new Server()
                        .url("https://api.ecomarket.com")
                        .description("Servidor de Producci√≥n (Ejemplo)")
                ))
                .tags(List.of(
                    new Tag()
                        .name("Usuarios V1")
                        .description("API REST b√°sica para gesti√≥n de usuarios"),
                    new Tag()
                        .name("Usuarios V2")
                        .description("API REST con HATEOAS para gesti√≥n avanzada de usuarios"),
                    new Tag()
                        .name("Sistema")
                        .description("Endpoints del sistema y monitoreo")
                ));
    }

    private Info apiInfo() {
        return new Info()
                .title("EcoMarket User Service API")
                .description(buildDescription())
                .version("1.0.0")
                .contact(new Contact()
                        .name("Equipo de Desarrollo EcoMarket")
                        .email("desarrollo@ecomarket.com")
                        .url("https://github.com/ecomarket/user-service"))
                .license(new License()
                        .name("MIT License")
                        .url("https://opensource.org/licenses/MIT"));
    }

    private String buildDescription() {
        return """
                ## üå± EcoMarket User Service
                
                Microservicio para la gesti√≥n completa de usuarios en la plataforma EcoMarket.
                
                ### üöÄ Caracter√≠sticas Principales:
                - ‚úÖ **CRUD completo** de usuarios
                - ‚úÖ **Dos versiones de API**: b√°sica (v1) y con HATEOAS (v2)
                - ‚úÖ **Filtros avanzados** por estado, rol y tienda
                - ‚úÖ **Validaciones** de datos y reglas de negocio
                - ‚úÖ **Base de datos H2** para desarrollo y testing
                
                ### üîó Navegaci√≥n HATEOAS (API v2):
                La versi√≥n 2 de la API incluye enlaces hipermedia que permiten:
                - Navegaci√≥n din√°mica entre recursos
                - Enlaces condicionales seg√∫n el estado del usuario
                - Descubrimiento autom√°tico de operaciones disponibles
                
                ### üìä Endpoints Disponibles:
                - **Gesti√≥n b√°sica**: CRUD de usuarios
                - **Filtros**: usuarios activos/inactivos
                - **Estad√≠sticas**: m√©tricas y reportes del sistema
                
                ### üõ†Ô∏è Tecnolog√≠as:
                - Spring Boot 3.4.5
                - Spring Data JPA
                - Spring HATEOAS
                - H2 Database
                - SpringDoc OpenAPI 3
                """;
    }
}
