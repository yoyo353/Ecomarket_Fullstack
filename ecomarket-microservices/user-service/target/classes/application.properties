spring.application.name=user-service
server.port=8091

# H2 como base de datos principal
spring.datasource.url=jdbc:h2:mem:userdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# ===== CONFIGURACIÓN SWAGGER/OPENAPI =====
# Habilitar generación de documentación
springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs

# Configurar Swagger UI
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.try-it-out-enabled=true
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.filter=true

# Configuraciones adicionales de Swagger UI
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.default-models-expand-depth=1
springdoc.swagger-ui.default-model-expand-depth=1

# Configurar qué paquetes incluir en la documentación
springdoc.packages-to-scan=com.ecomarket.userservice.controller

# Mostrar información del actuator (opcional)
springdoc.show-actuator=true

# Swagger y H2 console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.profiles.active=dev

# Configuración para mostrar mejor la información de DataFaker
logging.level.com.ecomarket.userservice.config.DataLoader=INFO